unique_ptr…そこでしか使われていないものに使う
shared_ptr…いろんな場所から参照されている場合に使う基本一つだけ
weak_ptr…shared_ptrを参照するときに使う
参照型
再代入ができない
int* a = new int(i)
入れてるものが変わってるからだめ
a = new int(l)
weak_ptr は shared_ptr を参照していますが、参照型は実態を参照する

考え方をアップデート！！

このようになり、weak_ptr から 参照型に置き換わります。
更に、 参照する側が ポインタ経由でないことから、
複数クラスから参照される側も、shared_ptr を使用する必要が無く、
unique_ptr とすることができます。

ややこしい所有権管理を行う必要がないのであれば、
参照型を積極的に使っていきたいところですが、使えないケースがあります。
これは、上記で上げたポインタと異なる点そのままで、
・ Null が有りうる
・ インスタンス生成時に初期化できない
・ 再代入(別実体の再割り当て)が有りうる
上記に該当した場合は、参照型が使用できませんので、
shared_ptr と weak_ptr の組み合わせを使用する形になります。








