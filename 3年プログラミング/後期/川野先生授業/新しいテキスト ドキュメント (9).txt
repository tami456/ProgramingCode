Json→バイナリ

System.Text.JSON

JSONDocument : 読み取り専用
JSONNode : 読み書き可能

JSONDocument.Parse(ファイルストリーム);
をすることで、ファイルの内容を読み込んで
JSONDocumentオブジェクトを生成する
Parseした時点で、ファイルストリームのカーソルは

開いたファイルは、ファイルカーソルというのを内部に持っています。
これは、レコードの針みたいなもので、読みだせば読み出すほど
次の場所にレコードの針が移動します。

子の針の場所のことをファイルカーソルといいます
C++のfseekの場合はSEEK_SET(ファイルの始まり)
SEEK_CUR(針の現在地),SEEK_END(ファイルの終わり)
fseekの場合は、この指定と、そこからのオフセットで針の位置を指定の
場所に移動させてました。

C#の場合は、ファイルポインタがファイルストリームというので扱われますが、
結局中身は同じです。ファイルの終端まで読んだら針は最後に
あります。

JSONDocument.Parse(stream);
とやった時点で、針は最後の位置にあります。

JSONというのは、中身は基本的にノードというので出来てて、ツリー構造になっています。
ツリー構造なので、今のノードの子ノードがいくつあるのかわかりません。
さらにJSON特有のややこしいところは子ノードが配列なのか、連想配列
(オブジェクト)なのかが、ばらばらである(決まってない)
データとして判別しやすく作るはずなので、今と同列のノード
が配列系なのか、オブジェクト系なのかは統一されている「はず」



