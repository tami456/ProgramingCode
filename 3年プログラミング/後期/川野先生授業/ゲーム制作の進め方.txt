①一番最初にガントチャートチェック
	ガントチャートの種類は問いません
	ローカルならGanttProjectだったり、
	クラウドならJiraというのがあったり
①毎週進捗チェック
	(業界に行かない人は免除)
②一応金曜日に末金先生にチェック(本気じゃない人は出さなくていいので、最初に
言ってください)


企画に関して
	パクリにしてほしい(基本的にオリジナルは禁止)
	オリジナルにしたいならアイデアを2つのみ組み合わせてください
技能的な面
	見積もり立たないのは禁止(特に3D周り)	
	求められているであろう技術を使用すること
	ガントチャートから遅れそうなら周りにすぐ相談すること
見積もりというかガントチャートへの項目の書き方
	まず、作りたいゲームに必要な要素を100個くらいに列挙してください
	これが10個なら、粒度が荒すぎる。
		(プレイヤーの実装)
	→1個がでかいので、見積もりが立てられない
		ここからさらに10分割する
		
100個出てしまうと問題点が…
	一応の締め切りが1/5です
	どう考えても間に合わない
	①頑張るか、超がんばるか
	②優先順位の低い奴から削っていく
	
	意外と計画通りにいかないもの
	
	マイルストーンを立てて、その手前に
	「バッファ期間」を置こう
見積もりの時に検討してほしい項目
	→ツール作るか？
	
スーパーマリオを作りたい場合
へたくそな文章でいいので、
スーパーマリオについて文章で説明してください

UML(ユースケース図)の「ユースケス」の抽出について
とにかく、やりたい(実現したい)ことを文章にしてみる

重要な点が、登場人物と、その役割を明記するように書いてみる
(いきなり正解のものはユースケースは書けませんが、まず書いてみることが重要)
→人に説明すると、脳内のふわっとした仕様が形になってきます。

マリオならマリオのゲームを他人に説明する文章を書く
この文章の中から「名詞」と、「動詞」に注目します

名詞はクラス(もしくは変数)
動詞はメソッドになると考えます

「プレイヤーはマリオをコントローラーで操作します。
マリオは通常はジャンプと左右移動、そしてダッシュを
行います。
マリオは通常状態で敵に接触すると死にます。
ただし、敵を上から踏みつけると、敵にダメージが入ります
パワーアップキノコを採ると、マリオが巨大化します。
巨大化状態では1度だけダメージを受けても、巨大化が
解除されるだけで済みます。
ステージは地面と、壊せるブロック、壊せないブロック、
アイテムが入っている？ブロックがあります。
ブロックを壊したりたたくとパワーアップキノコが出ることがあります。
この時に、キノコは左右どちらかに動きます
敵にはクリボーなどがいて、クリボーは左右どちらかに動きます。
上から踏まれると死にます。
ゴールにはお城があって、その手前にポールがあります。
マリオがそれに触れることで、ステージクリアとなります。
マリオが触れると旗が上がりますが、マリオが触れる位置で
旗の高さが変わります。この高さでスコアが変わります。」

クラス(名詞)
・Player
	- Move
	- Jump
	- Dash
	- ChangeBig
	- ChangeFire
・Controller(Input)
	- Update()
・Stage
	- ReadStage
	- Update
	
・Block<|-Breakable
		<|-Unbreakable
		<|-Question
	- Update()
	- IsBroken()
・Mashroom<|-PowerUp
	- Update()
・Enemy<|-Kuribo
	- Update()
	- Move()
	
ここに書いたように、必要な機能やクラスを並べるだけでも
かなり大変だと思いますが、これを最初にやっておくことで、可能な限り
正確な見積もりに近づけることができます
→見えない遅れをなくす。

ガントチャートでは進捗を%で表せますが、この%は信用できない
0%か100%かがその日のうちにわかるように組んでいきましょう
100%以外は0%だと思っておきましょう。

優先順位をつけておきましょう
①とにかくゲームとしての完成を最優先にしましょう
②目を引くように、ゲームとして遊びたくなるようにしましょう。
	UIを売り物っぽく配置しましょう。
	フォントはデフォルトのものはやめましょう
	Unityのデフォルトボタンは使うな
	視認性に気を付けましょう(色に多少は気を配って)
③技術的なアピールを混ぜておきましょう
	1.シェーダーによる画面効果(2D)
		普通にDxLibの機能でレンダリングした後に１枚の絵に
		ポストエフェクトかける(ゲームの邪魔にならない・依存していない)
	2.3D(被写界深度 DxLib)特有のシェーダ
		この場合、マルチレンダーターゲット等の理解が必要になるため
		ちょっと時間はとっておいたほうがいい
	3.ネットワーク
		P2Pだとちょっとハードルが低くてアピールとしてはちょっと弱いかも
		→この時点でもマルチスレッドが必要になるので、そこそこの技術は
		必要→アピール次第(ポートフォリオ等の説明を充実させる)
		
		クライアント&サーバモデル
		→対処がまずいとすぐ処理落ちする(処理落ちしなくても
		データが欠損する)
		
		→とにかくデータ量を減らす
		
	4.物理エンジン
		2Dならまだいけるかな…
		3Dは死ぬ(出来合いのものを使いましょう…難しい)
	
	

CAのグラフィックス講座を受けた人は、履歴書なりエントリーシートなりに
	きっちり書いておきましょう。
	
企業は怖くない
・皆さんに(自社の社員には)幸せになってほしい
	→幸せになれる人に入ってほしい
		→お勉強を継続できる人に入ってほしい
		→お勉強を支援します

皆さんが「何をしたか」「何に参加したか」を記載するのが
	エントリーシートなり、履歴書です
	作文が苦手な人はChatGPTを使いましょう。
	
	自己PRで
	・まじめです
	・根性あります
	・やさしいです
	だめです。
	
	真面目なのはアピールにならない
	真面目なのは当たり前
	そういうのは周りの人が評価するもの
		真面目をアピールするのではなく、エピソードを語ってください。
		



皆さんがVisualStudioでC++で組むときは、原則として
C++17以降を指定して、プログラムしましょう
(デフォルトはC++14なのですが、このバージョン特にVSC++に関しては
本来エラーになるコードが通ったりします)

現在のC++コンパイラのデファクトスタンダードはclangです。
